# This is a basic workflow to help you get started with Actions

name: CI
env:
  mascot: Mona
  MY_ENV_VAR: ${{ github.ref == 'refs/heads/main' && '[\"a\", \"b\"]' || '[\"a\", \"b\", \"c\"]' }}
  mine: ${{ github.ref == 'refs/heads/main' && '["a", "b"]' || '["a", "b", "c"]' }}
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request
  push:
    # branches: ["branch-1-0-x", "branch-1-1-x" ]
    # Sequence of patterns matched against refs/tags
    tags:        
      - 1.0.*
      - 1.1.*
  pull_request:
    branches: [ "main" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "matrix={\"env\": env.MY_ENV_VAR}"
          echo "matrix={\"env\": ${{ env.MY_ENV_VAR }}}"
          echo "matrix={\"env\": ${{ env.MY_ENV_VAR }}}" >> $GITHUB_OUTPUT
          # echo "matrix={\"env\": ['aa','bb','cc']}" >> $GITHUB_OUTPUT

  build:
    needs: prepare_matrix
    strategy:
      matrix: ${{ fromJSON(needs.prepare_matrix.outputs.matrix) }}

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo '${{fromJson( env.mine )}}'
          cat README.md
          echo 'Hi ${{ env.mascot }}' 
          echo 'MY_ENV_VAR ${{ env.MY_ENV_VAR }}' 
          echo 'sha ${{ github.sha }}'
          echo 'ref ${{ github.ref }}'
          echo 'ref_name ${{ github.ref_name }}'
          echo 'ref_protected ${{ github.ref_protected }}'
          echo 'ref_type ${{ github.ref_type }}'
          echo 'env ${{ matrix.env }}'